services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    platform: linux/amd64  # Works on both Intel and ARM64
    container_name: cygnuz_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-cygnuz_erp}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root_password}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_USER: ${DB_USERNAME:-cygnuz_user}
    ports:
      - "${DB_PORT:-3306}:3306"  # Use standard port, override with DB_PORT env if needed
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - cygnuz_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cygnuz_redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - cygnuz_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PHP Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cygnuz_app
    restart: unless-stopped
    environment:
      APP_NAME: "${APP_NAME:-Cygnuz ERP}"
      APP_ENV: "${APP_ENV:-local}"
      APP_KEY: "${APP_KEY:-}"
      APP_DEBUG: "${APP_DEBUG:-true}"
      APP_URL: "${APP_URL:-http://localhost:8000}"
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-cygnuz_erp}
      DB_USERNAME: ${DB_USERNAME:-cygnuz_user}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis
      SESSION_DRIVER: redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MAIL_MAILER: ${MAIL_MAILER:-smtp}
      MAIL_HOST: ${MAIL_HOST:-mailhog}
      MAIL_PORT: ${MAIL_PORT:-1025}
    ports:
      - "${APP_PORT:-8000}:80"
    volumes:
      - ./.env:/var/www/html/.env
      - ./storage:/var/www/html/storage
      - ./public/storage:/var/www/html/public/storage
      - ./Modules:/var/www/html/Modules
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cygnuz_network

  # Queue Worker (optional - uncomment if using queues)
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cygnuz_queue
    restart: unless-stopped
    command: php artisan queue:work --sleep=3 --tries=3
    environment:
      APP_ENV: "${APP_ENV:-local}"
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-cygnuz_erp}
      DB_USERNAME: ${DB_USERNAME:-cygnuz_user}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ./.env:/var/www/html/.env
      - ./storage:/var/www/html/storage
    depends_on:
      - app
      - mysql
      - redis
    networks:
      - cygnuz_network

  # Scheduler (cron jobs)
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cygnuz_scheduler
    restart: unless-stopped
    command: /bin/sh -c "while true; do php artisan schedule:run --verbose --no-interaction & sleep 60; done"
    environment:
      APP_ENV: "${APP_ENV:-local}"
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-cygnuz_erp}
      DB_USERNAME: ${DB_USERNAME:-cygnuz_user}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ./.env:/var/www/html/.env
      - ./storage:/var/www/html/storage
    depends_on:
      - app
      - mysql
      - redis
    networks:
      - cygnuz_network

  # Mailhog (for local email testing - optional)
  mailhog:
    image: mailhog/mailhog
    platform: linux/amd64  # Platform compatibility
    container_name: cygnuz_mailhog
    restart: unless-stopped
    ports:
      - "${MAILHOG_PORT:-8025}:8025"
      - "${MAIL_PORT:-1025}:1025"
    networks:
      - cygnuz_network
    profiles:
      - dev

  # phpMyAdmin (optional - for database management)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    platform: linux/amd64  # Platform compatibility
    container_name: cygnuz_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${DB_USERNAME:-cygnuz_user}
      PMA_PASSWORD: ${DB_PASSWORD:-password}
      UPLOAD_LIMIT: 100M
    ports:
      - "${PMA_PORT:-8080}:80"
    depends_on:
      - mysql
    networks:
      - cygnuz_network
    profiles:
      - dev

networks:
  cygnuz_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local